<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.system.dao.UserDao">
    <!--根据账号查询数据-->
    <select id="getUser" resultType="com.example.demo.system.pojo.UserPojo">
        select *
        from sys_user_info
        where user_name = #{userName}
    </select>

    <!--查询所有数据(超级管理员)-->
    <select id="listUserInfoPageAdmin" resultType="com.example.demo.system.pojo.UserPojo">
        SELECT
        u.id,u.user_name,u.real_name,u.user_password,u.user_birthday,u.user_phone,u.is_lock,u.password_times,u.multi_tenant_id,u.create_time,u.update_time,u.is_del,u.remark,u.creator,u.updator,r.id
        as roleId,r.role_name as roleName,u.user_gender
        FROM sys_user_info u LEFT JOIN sys_user_role ur ON u.id=ur.user_id AND ur.is_del = 0 LEFT JOIN sys_role_info r
        ON
        ur.role_id=r.id AND r.is_del =0 WHERE
        u.is_del=0
        <if test="realName != null and realName != ''">
            and u.real_name LIKE '%${realName}%'
        </if>
        <if test="userName != null and userName != ''">
            and u.user_name LIKE '%${userName}%'
        </if>
        ORDER BY u.create_time DESC
    </select>

    <!--查询所有数据(除超级管理员外的用户)-->
    <select id="listUserInfoPage" resultType="com.example.demo.system.pojo.UserPojo">
        SELECT
        u.id,u.user_name,u.real_name,u.user_password,u.user_birthday,u.user_phone,u.is_lock,u.password_times,u.multi_tenant_id,u.create_time,u.update_time,u.is_del,u.remark,u.creator,u.updator,r.id
        as roleId,r.role_name as roleName,u.user_gender
        FROM sys_user_info u LEFT JOIN sys_user_role ur ON u.id=ur.user_id AND ur.is_del = 0 LEFT JOIN sys_role_info r ON
        ur.role_id=r.id AND r.is_del =0 WHERE
        u.is_del=0 and u.user_name != 'admin'
        <if test="realName != null and realName != ''">
            and u.real_name LIKE '%${realName}%'
        </if>
        <if test="userName != null and userName != ''">
            and u.user_name LIKE '%${userName}%'
        </if>
        ORDER BY u.create_time DESC
    </select>

    <!--保存数据-->
    <insert id="saveDataUser" parameterType="com.example.demo.system.pojo.UserPojo">
        INSERT INTO sys_user_info(id, user_name, real_name, user_password, user_birthday, user_phone, password_times,
                              create_time, remark, creator, user_gender)
        VALUES (#{id}, #{userName}, #{realName}, #{userPassword}, #{userBirthday}, #{userPhone}, 3, #{createTime},
                #{remark}, #{creator}, #{userGender})
    </insert>

    <!--更新账号状态-->
    <update id="updateUserStatus">
        UPDATE sys_user_info
        SET is_lock = #{type}
        WHERE id = #{id}
    </update>

    <!--删除数据-->
    <update id="deleteUser">
        UPDATE sys_user_info
        SET is_del = 1
        WHERE id = #{id}
    </update>

    <!--更新数据-->
    <update id="updateDataUser" parameterType="com.example.demo.system.pojo.UserPojo">
        UPDATE sys_user_info
        SET real_name     = #{realName},
            user_birthday = #{userBirthday},
            user_gender   = #{userGender},
            user_phone    = #{userPhone},
            remark        = #{remark},
            update_time   = #{updateTime},
            updator       = #{updator}
        WHERE id = #{id}
    </update>

    <!--将数据保存到用户与角色关联表-->
    <insert id="saveUserRole" parameterType="com.example.demo.system.pojo.UserRolePojo">
        INSERT INTO sys_user_role(role_id, user_id, create_time, creator)
        VALUES (#{roleId}, #{userId}, #{createTime}, #{creator})
    </insert>

    <!--将用户与角色关联表的数据更新通过用户id-->
    <update id="updateUserRole" parameterType="com.example.demo.system.pojo.UserRolePojo">
        UPDATE sys_user_role
        SET role_id     = #{roleId},
            update_time = #{updateTime},
            updator     = #{updator}
        WHERE user_id = #{userId}
          AND is_del = 0
    </update>

    <!--通过用户id删除用户与角色关联表信息-->
    <update id="deleteUserRole">
        UPDATE sys_user_role
        SET is_del = 1
        WHERE user_id = #{id}
    </update>

    <!--通过用户id查询用户与角色关联表数据-->
    <select id="getUserRoleByUserId" resultType="com.example.demo.system.pojo.UserRolePojo">
        SELECT *
        FROM sys_user_role
        WHERE user_id = #{id}
    </select>

    <!--修改密码-->
    <update id="updatePassword">
        UPDATE sys_user_info
        SET user_password = #{encryptPassword}
        WHERE user_name = #{userName}
    </update>

    <!--通过id查询对应的姓名-->
    <select id="getRealName" resultType="java.lang.String">
        select real_name from  sys_user_info where id =#{data}
    </select>
</mapper>