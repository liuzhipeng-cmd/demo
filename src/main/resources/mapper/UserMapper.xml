<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.UserDao">
    <!--根据账号查询数据-->
    <select id="getUser" resultType="com.example.demo.pojo.UserPojo">
        select *
        from user_info
        where user_name = #{userName}
    </select>

    <!--查询全部数据-->
    <select id="listUserInfoPage" resultType="com.example.demo.pojo.UserPojo">
        SELECT
        u.id,u.user_name,u.real_name,u.user_password,u.user_birthday,u.user_phone,u.is_lock,u.password_times,u.multi_tenant_id,u.create_time,u.update_time,u.is_del,u.remark,u.creator,u.updator,r.id
        as roleId,r.role_name as roleName
        FROM user_info u LEFT JOIN user_role ur ON u.id=ur.user_id AND ur.is_del = 0 LEFT JOIN role_info r ON ur.role_id=r.id AND r.is_del =0 WHERE
        u.is_del=0
        <if test="realName != null and realName != ''">
            and u.real_name LIKE '%${realName}%'
        </if>
        <if test="userName != null and userName != ''">
            and u.user_name LIKE '%${userName}%'
        </if>
        ORDER BY u.create_time DESC
    </select>

    <!--保存数据-->
    <insert id="saveDataUser" parameterType="com.example.demo.pojo.UserPojo">
        INSERT INTO user_info(id, user_name, real_name, user_password, user_birthday, user_phone, password_times,
                              create_time, remark, creator)
        VALUES (#{id}, #{userName}, #{realName}, #{userPassword}, #{userBirthday}, #{userPhone}, 3, #{createTime},
                #{remark}, #{creator})
    </insert>

    <!--更新账号状态-->
    <update id="updateUserStatus">
        UPDATE user_info
        SET is_lock = #{type}
        WHERE id = #{id}
    </update>

    <!--删除数据-->
    <update id="deleteUser">
        UPDATE user_info
        SET is_del = 1
        WHERE id = #{id}
    </update>

    <!--更新数据-->
    <update id="updateDataUser" parameterType="com.example.demo.pojo.UserPojo">
        UPDATE user_info
        SET real_name     = #{realName},
            user_birthday = #{userBirthday},
            user_phone    = #{userPhone},
            remark        = #{remark},
            update_time   = #{updateTime},
            updator       = #{updator}
        WHERE id = #{id}
    </update>

    <!--将数据保存到用户与角色关联表-->
    <insert id="saveUserRole" parameterType="com.example.demo.pojo.UserRolePojo">
        INSERT INTO user_role(role_id, user_id, create_time, creator)
        VALUES (#{roleId}, #{userId}, #{createTime}, #{creator})
    </insert>

    <!--将用户与角色关联表的数据更新通过用户id-->
    <update id="updateUserRole" parameterType="com.example.demo.pojo.UserRolePojo">
        UPDATE user_role
        SET role_id     = #{roleId},
            update_time = #{updateTime},
            updator     = #{updator}
        WHERE user_id = #{userId} AND is_del = 0
    </update>

    <!--通过用户id删除用户与角色关联表信息-->
    <update id="deleteUserRole">
        UPDATE user_role SET is_del = 1 WHERE user_id = #{id}
    </update>

    <!--通过用户id查询用户与角色关联表数据-->
    <select id="getUserRoleByUserId" resultType="com.example.demo.pojo.UserRolePojo">
        SELECT * FROM user_role WHERE user_id = #{id}
    </select>
</mapper>